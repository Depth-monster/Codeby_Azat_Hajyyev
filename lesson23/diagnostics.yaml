---
apiVersion: v1
kind: ConfigMap
metadata:
  name: diagnostic-script
  namespace: dev
data:
  script.sh: |
    #!/bin/sh
    echo "Looking for pods in namespace dev:"
    kubectl get pods -n dev
    sleep 3600
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: diagnostic-sa
  namespace: dev
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: dev
  name: pod-reader
rules:
- apiGroups: [""] # "" indicates the core API group
  resources: ["pods"]
  verbs: ["get", "watch", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: read-pods
  namespace: dev
subjects:
# You can specify more than one "subject"
- kind: ServiceAccount
  name: diagnostic-sa # "name" is case sensitive
  namespace: dev
roleRef:
  # "roleRef" specifies the binding to a Role / ClusterRole
  kind: Role #this must be Role or ClusterRole
  name: pod-reader # this must match the name of the Role or ClusterRole you wish to bind to
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: Pod
metadata:
  name: diagnostic-pod
  namespace: dev
spec:
  serviceAccountName: diagnostic-sa
  containers:
  - name: diagnostic-container
    image: bitnami/kubectl:latest
    command: ["/bin/bash", "/config/script.sh"]
    volumeMounts:
    - name: config-volume
      mountPath: /config
  volumes:
  - name: config-volume
    configMap:
      name: diagnostic-script
